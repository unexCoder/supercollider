language: cpp

matrix:
  fast_finish: true
  include:
    # Summary:
    #
    # Linux jobs: gcc {6, 7, 8, 9, 10, 9-shared-libscsynth, 9-minus-gui-and-lint, [9-using-syslibs]}
    #    clang {4, 5, 6, 7, 8, 9, 10}
    # gcc 6, clang 4 are on xenial, all others on bionic
    #
    # macOS jobs: xcode 10.1, xcode 11.3, xcode 11.3-using-syslibs, xcode 11.3-shared-libscsynth
    # xcode 10 is on High Sierra 10.13, xcode 11 are on Mojave 10.14
    #
    # macOS is deployed from the plain xcode 11.3 job
    # macOS jobs (taking longer time to finish) run first to decrease overall build time

    # macOS 10.13 xcode10 legacy build with qt 5.9
    # - os: osx
    #   osx_image: xcode10.1
    #   env:
    #     - JOB_NAME="macos xcode10.1"
    #     - IS_LEGACY_BUILD=true
    #     - QT=true
    #     - DO_LINT=false
    #     - USE_SYSLIBS=false
    #     - SHARED_LIBSCSYNTH=false
    #     - S3_DEPLOY_PREFIX="SC-xcode10.1-" # turn on S3 deployment
    #     - GITHUB_DEPLOY_SUFFIX="-macOS-xcode10.1" # turn on Github deployment
    # 
    # - os: osx
    #   osx_image: xcode10.1
    #   env:
    #     - JOB_NAME="macos xcode10.1 new qt"
    #     - IS_LEGACY_BUILD=false
    #     - QT=true
    #     - DO_LINT=false
    #     - USE_SYSLIBS=false
    #     - SHARED_LIBSCSYNTH=false
    #     - S3_DEPLOY_PREFIX="SC-xcode10.1-newQT-" # turn on S3 deployment
    #     - GITHUB_DEPLOY_SUFFIX="-macOS-xcode10.1-newQT" # turn on Github deployment
    # 
    # # macOS 10.14 xcode11
    # - os: osx
    #   osx_image: xcode11.3
    #   env:
    #     - JOB_NAME="macos xcode11.3"
    #     - IS_LEGACY_BUILD=true
    #     - QT=true
    #     - DO_LINT=false
    #     - USE_SYSLIBS=false
    #     - SHARED_LIBSCSYNTH=false
    #     - S3_DEPLOY_PREFIX="SC-xcode11.3-" # turn on S3 deployment
    #     - GITHUB_DEPLOY_SUFFIX="-macOS-xcode11.3" # turn on Github deployment
    # 
    # # macOS 10.14 xcode11
    # - os: osx
    #   osx_image: xcode11.3
    #   env:
    #     - JOB_NAME="macos xcode11.3 new qt"
    #     - IS_LEGACY_BUILD=false
    #     - QT=true
    #     - DO_LINT=false
    #     - USE_SYSLIBS=false
    #     - SHARED_LIBSCSYNTH=false
    #     - S3_DEPLOY_PREFIX="SC-xcode11.3-newQT-" # turn on S3 deployment
    #     - GITHUB_DEPLOY_SUFFIX="-macOS-xcode11.3-newQT" # turn on Github deployment
    
    # macOS 10.14 xcode11
    - os: osx
      osx_image: xcode11
      env:
        - JOB_NAME="macos xcode11.0"
        - IS_LEGACY_BUILD=true
        - QT=true
        - DO_LINT=false
        - USE_SYSLIBS=false
        - SHARED_LIBSCSYNTH=false
        - S3_DEPLOY_PREFIX="SC-xcode11.0-" # turn on S3 deployment
        - GITHUB_DEPLOY_SUFFIX="-macOS-xcode11.0" # turn on Github deployment

    # macOS 10.14 xcode11
    - os: osx
      osx_image: xcode11
      env:
        - JOB_NAME="macos xcode11.0 new qt"
        - IS_LEGACY_BUILD=false
        - QT=true
        - DO_LINT=false
        - USE_SYSLIBS=false
        - SHARED_LIBSCSYNTH=false
        - S3_DEPLOY_PREFIX="SC-xcode11.0-newQT-" # turn on S3 deployment
        - GITHUB_DEPLOY_SUFFIX="-macOS-xcode11.0-newQT" # turn on Github deployment

    # # macOS 10.15 xcode11
    # - os: osx
    #   osx_image: xcode11.6
    #   env:
    #     - JOB_NAME="macos xcode11.6"
    #     - IS_LEGACY_BUILD=true
    #     - QT=true
    #     - DO_LINT=false
    #     - USE_SYSLIBS=false
    #     - SHARED_LIBSCSYNTH=false
    #     - S3_DEPLOY_PREFIX="SC-xcode11.6-" # turn on S3 deployment
    #     - GITHUB_DEPLOY_SUFFIX="-macOS-xcode11.6" # turn on Github deployment
    # 
    # # macOS 10.15 xcode11
    # - os: osx
    #   osx_image: xcode11.6
    #   env:
    #     - JOB_NAME="macos xcode11.6 new qt"
    #     - IS_LEGACY_BUILD=false
    #     - QT=true
    #     - DO_LINT=false
    #     - USE_SYSLIBS=false
    #     - SHARED_LIBSCSYNTH=false
    #     - S3_DEPLOY_PREFIX="SC-xcode11.6-newQT-" # turn on S3 deployment
    #     - GITHUB_DEPLOY_SUFFIX="-macOS-xcode11.6-newQT" # turn on Github deployment

# use ccache to speed up build times. on osx,
# we install it during the the before_install step
# with xcode, this requires an additional flag passed during the configuration phase.
# see README_MACOS.md for details.
cache:
 ccache: true
 directories:
   - ../downloads

before_install:
 - eval "$MATRIX_EVAL"
 - echo "JOB NAME - $JOB_NAME"
 - $TRAVIS_BUILD_DIR/.travis/before-install-$TRAVIS_OS_NAME.sh --qt=$QT

before_script:
 - mkdir BUILD && cd BUILD
 # Remove the "Version-" prefix.
 - export VERSION_TO_BUILD=${TRAVIS_TAG##Version-}

 - $TRAVIS_BUILD_DIR/.travis/before-script-$TRAVIS_OS_NAME.sh --qt=$QT
# prep for testing
 - if [[ $QT == true ]]; then $TRAVIS_BUILD_DIR/.travis/qpm-prep.sh; fi

script:
 - $TRAVIS_BUILD_DIR/.travis/script-$TRAVIS_OS_NAME.sh
 - $TRAVIS_BUILD_DIR/.travis/test.sh
 - export S3_ARTIFACT_NAME=${S3_DEPLOY_PREFIX}${TRAVIS_COMMIT}
 - export GITHUB_ARTIFACT_NAME=SuperCollider-${VERSION_TO_BUILD}${GITHUB_DEPLOY_SUFFIX}
# only on osx for now
 - if [[ -n "$S3_DEPLOY_PREFIX" || -n "$GITHUB_DEPLOY_SUFFIX" ]]; then $TRAVIS_BUILD_DIR/.travis/package-$TRAVIS_OS_NAME.sh; fi

before_deploy:
 # required for github releases
 - export BUILD_PREFIX=$TRAVIS_REPO_SLUG/$TRAVIS_OS_NAME
 - export S3_BUILDS_LOCATION=builds/$BUILD_PREFIX
 - export S3_URL=https://supercollider.s3.amazonaws.com/$S3_BUILDS_LOCATION/$S3_ARTIFACT_NAME.zip
 - export FWD_HTML='<html><head><meta http-equiv="refresh" content="0; url='$S3_URL'" /></head></html>'
 # put everything to be archived in artifacts/
 - mkdir -p "$HOME/artifacts/${TRAVIS_BRANCH%/*}"
 - mkdir -p "$HOME/artifacts/${TRAVIS_TAG%/*}"
 - echo $FWD_HTML > $HOME/artifacts/$TRAVIS_BRANCH-latest.html
 - 'if [[ $TRAVIS_TAG != "head" ]]; then echo $FWD_HTML > $HOME/artifacts/$TRAVIS_TAG.html; fi;'

deploy:
 # s3 upload - every commit
 - provider: s3
   access_key_id: $AWS_KEY
   secret_access_key: $AWS_SECRET
   bucket: supercollider
   local-dir: $HOME/artifacts
   upload-dir: $S3_BUILDS_LOCATION
   region: us-west-2
   skip_cleanup: true
   endpoint: s3-us-west-2.amazonaws.com
   acl: public_read
   on:
     condition: $TRAVIS_OS_NAME = osx && -n $AWS_KEY && -n $AWS_SECRET && -n $S3_DEPLOY_PREFIX
     all_branches: true
 # github releases - only tags
 - provider: releases
   api_key: $GITHUB_KEY
   file: $HOME/$GITHUB_ARTIFACT_NAME.zip
   prerelease: true
   skip_cleanup: true
   on:
     condition: $TRAVIS_OS_NAME = osx && -n $GITHUB_KEY && -n $GITHUB_DEPLOY_SUFFIX
     tags: true
     all_branches: true

after_deploy:
 - 'if [[ -n "$S3_DEPLOY_PREFIX" ]]; then echo S3 Build Location: $S3_URL; fi;'

notifications:
  on_success: change
  on_failure: change
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/51b9b53ca50a7bfca97d
    on_success: change
    on_failure: always
